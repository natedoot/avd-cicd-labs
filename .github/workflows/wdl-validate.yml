name: Validate Network with ANTA

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The branch to validate (for inventory selection)"
        required: true
        default: "main"

jobs:
  validate:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Ansible and AVD roles
        run: |
          pip install "pyavd[ansible]"
          ansible-galaxy collection install arista.avd

      # Step 4: Run AVD Validate State
      - name: Run AVD Validate State
        env:
          ANSIBLE_USERNAME: ${{ secrets.ANSIBLE_USERNAME }}
          ANSIBLE_PASSWORD: ${{ secrets.ANSIBLE_PASSWORD }}
        run: |
          cd tech-library/datacenter
          ansible-playbook playbooks/validate.yml -i inventory.yml \
            -e ansible_user=${{ secrets.ANSIBLE_USERNAME }} \
            -e ansible_password=${{ secrets.ANSIBLE_PASSWORD }} \
            -e only_failed_tests=True

      # Step 5: Parse Validation Report and Detect Failures
      - name: Parse Validation Report
        run: |
          cd tech-library/datacenter/reports
          if grep -q ",FAIL," FABRIC-state.csv; then
            echo "Validation failures detected in FABRIC-state.csv:"
            grep ",FAIL," FABRIC-state.csv
            exit 1
          else
            echo "No validation failures detected."
          fi

      # Step 6: Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      # Step 7: Create GitHub Issue on Validation Failure
      - name: Create GitHub Issue on Validation Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "Validation Failure in ${{ github.event.inputs.environment }}" \
                          --body "The validation step failed for environment: ${{ github.event.inputs.environment }}. Please investigate the logs for more details."

      # Step 8: Fetch and Checkout Main Branch for Config Deployment
      - name: Fetch and Checkout Main Branch
        if: failure()
        run: |
          git fetch origin main
          git checkout main

      # Step 9: Build and Deploy Configs
      - name: Build and Deploy Configs
        if: failure()
        run: |
          cd tech-library/datacenter
          python build.py
          ansible-playbook playbooks/deploy.yml \
            -e cv_token=${{ secrets.CV_SVC_TOKEN }} \
            -e cv_run_change_control=True
