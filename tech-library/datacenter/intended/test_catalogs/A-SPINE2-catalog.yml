anta.tests.connectivity:
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF1
      neighbor_port: Ethernet2
      port: Ethernet1
    result_overwrite:
      custom_field: 'Local: Ethernet1 - Remote: A-LEAF1 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF2
      neighbor_port: Ethernet2
      port: Ethernet2
    result_overwrite:
      custom_field: 'Local: Ethernet2 - Remote: A-LEAF2 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF3
      neighbor_port: Ethernet2
      port: Ethernet3
    result_overwrite:
      custom_field: 'Local: Ethernet3 - Remote: A-LEAF3 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF4
      neighbor_port: Ethernet2
      port: Ethernet4
    result_overwrite:
      custom_field: 'Local: Ethernet4 - Remote: A-LEAF4 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF5
      neighbor_port: Ethernet2
      port: Ethernet5
    result_overwrite:
      custom_field: 'Local: Ethernet5 - Remote: A-LEAF5 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF6
      neighbor_port: Ethernet2
      port: Ethernet6
    result_overwrite:
      custom_field: 'Local: Ethernet6 - Remote: A-LEAF6 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF7
      neighbor_port: Ethernet2
      port: Ethernet7
    result_overwrite:
      custom_field: 'Local: Ethernet7 - Remote: A-LEAF7 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: A-LEAF8
      neighbor_port: Ethernet2
      port: Ethernet8
    result_overwrite:
      custom_field: 'Local: Ethernet8 - Remote: A-LEAF8 Ethernet2'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.3
      repeat: 1
      source: 192.168.1.2
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet1 (IP: 192.168.1.2) - Destination:
        A-LEAF1 Ethernet2 (IP: 192.168.1.3)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.11
      repeat: 1
      source: 192.168.1.10
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet2 (IP: 192.168.1.10) - Destination:
        A-LEAF2 Ethernet2 (IP: 192.168.1.11)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.19
      repeat: 1
      source: 192.168.1.18
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet3 (IP: 192.168.1.18) - Destination:
        A-LEAF3 Ethernet2 (IP: 192.168.1.19)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.27
      repeat: 1
      source: 192.168.1.26
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet4 (IP: 192.168.1.26) - Destination:
        A-LEAF4 Ethernet2 (IP: 192.168.1.27)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.35
      repeat: 1
      source: 192.168.1.34
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet5 (IP: 192.168.1.34) - Destination:
        A-LEAF5 Ethernet2 (IP: 192.168.1.35)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.43
      repeat: 1
      source: 192.168.1.42
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet6 (IP: 192.168.1.42) - Destination:
        A-LEAF6 Ethernet2 (IP: 192.168.1.43)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.51
      repeat: 1
      source: 192.168.1.50
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet7 (IP: 192.168.1.50) - Destination:
        A-LEAF7 Ethernet2 (IP: 192.168.1.51)'
- VerifyReachability:
    hosts:
    - destination: 192.168.1.59
      repeat: 1
      source: 192.168.1.58
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet8 (IP: 192.168.1.58) - Destination:
        A-LEAF8 Ethernet2 (IP: 192.168.1.59)'
anta.tests.interfaces:
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet1
      status: up
    result_overwrite:
      custom_field: Interface Ethernet1 - P2P_A-LEAF1_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet2
      status: up
    result_overwrite:
      custom_field: Interface Ethernet2 - P2P_A-LEAF2_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet3
      status: up
    result_overwrite:
      custom_field: Interface Ethernet3 - P2P_A-LEAF3_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet4
      status: up
    result_overwrite:
      custom_field: Interface Ethernet4 - P2P_A-LEAF4_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet5
      status: up
    result_overwrite:
      custom_field: Interface Ethernet5 - P2P_A-LEAF5_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet6
      status: up
    result_overwrite:
      custom_field: Interface Ethernet6 - P2P_A-LEAF6_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet7
      status: up
    result_overwrite:
      custom_field: Interface Ethernet7 - P2P_A-LEAF7_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet8
      status: up
    result_overwrite:
      custom_field: Interface Ethernet8 - P2P_A-LEAF8_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback0
      status: up
    result_overwrite:
      custom_field: Interface Loopback0 - ROUTER_ID = 'up'
anta.tests.routing.bgp:
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.1
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF1 (IP: 1.1.1.1)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.2
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF2 (IP: 1.1.1.2)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.3
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF3 (IP: 1.1.1.3)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.4
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF4 (IP: 1.1.1.4)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.5
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF5 (IP: 1.1.1.5)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.6
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF6 (IP: 1.1.1.6)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.7
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF7 (IP: 1.1.1.7)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 1.1.1.8
    result_overwrite:
      custom_field: 'BGP EVPN Peer: A-LEAF8 (IP: 1.1.1.8)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.3
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF1 (IP: 192.168.1.3)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.11
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF2 (IP: 192.168.1.11)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.19
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF3 (IP: 192.168.1.19)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.27
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF4 (IP: 192.168.1.27)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.35
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF5 (IP: 192.168.1.35)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.43
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF6 (IP: 192.168.1.43)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.51
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF7 (IP: 192.168.1.51)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.1.59
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: A-LEAF8 (IP: 192.168.1.59)'
anta.tests.routing.generic:
- VerifyRoutingProtocolModel:
    model: multi-agent
    result_overwrite:
      custom_field: 'Routing protocol model: multi-agent'
anta.tests.system:
- VerifyReloadCause: null
